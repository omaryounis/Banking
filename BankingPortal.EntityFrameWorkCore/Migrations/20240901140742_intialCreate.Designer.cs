// <auto-generated />
using System;
using BankingPortal.EntityFrameWorkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BankingPortal.EntityFrameWorkCore.Migrations
{
    [DbContext(typeof(BankDbContext))]
    [Migration("20240901140742_intialCreate")]
    partial class intialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BankingPortal.Domain.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccountType")
                        .HasColumnType("int");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Account", "dbo");
                });

            modelBuilder.Entity("BankingPortal.Domain.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .IsUnique();

                    b.ToTable("Adress", "dbo");
                });

            modelBuilder.Entity("BankingPortal.Domain.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasAnnotation("Email", "Email must be in correct format");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PersonalId")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<byte[]>("ProfilePhoto")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Clients", "dbo");
                });

            modelBuilder.Entity("BankingPortal.Domain.Entities.IntegrationRequestResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Request")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IntegrationRequestResponse", "log");
                });

            modelBuilder.Entity("BankingPortal.Domain.Entities.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RefreshTokens", "user_management");
                });

            modelBuilder.Entity("BankingPortal.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles", "user_management");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "admin",
                            NameAr = "مدير النظام"
                        },
                        new
                        {
                            Id = 2,
                            Name = "user",
                            NameAr = "مستخدم"
                        });
                });

            modelBuilder.Entity("BankingPortal.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("TrackingCorrelationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", "user_management");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = new byte[] { 85, 135, 159, 29, 84, 88, 175, 93, 155, 199, 236, 114, 173, 245, 115, 176, 125, 230, 91, 162, 186, 142, 24, 215, 61, 96, 81, 44, 202, 79, 182, 38, 52, 126, 188, 203, 188, 87, 126, 24, 36, 191, 82, 234, 238, 235, 48, 18, 58, 130, 15, 57, 141, 134, 173, 100, 60, 107, 244, 123, 70, 254, 62, 230 },
                            PasswordSalt = new byte[] { 42, 206, 208, 223, 244, 163, 70, 59, 250, 198, 218, 17, 90, 192, 244, 187, 190, 232, 45, 112, 153, 183, 176, 6, 222, 67, 173, 103, 55, 40, 4, 79, 26, 125, 128, 120, 149, 145, 14, 120, 45, 166, 150, 184, 194, 224, 100, 160, 82, 170, 242, 220, 13, 21, 116, 61, 184, 237, 221, 61, 1, 46, 116, 145, 148, 54, 236, 209, 88, 173, 255, 249, 231, 138, 171, 40, 23, 4, 226, 73, 131, 176, 218, 31, 155, 248, 53, 46, 102, 102, 242, 78, 201, 199, 19, 225, 169, 181, 19, 250, 198, 249, 17, 156, 163, 127, 142, 98, 135, 215, 182, 145, 80, 54, 184, 11, 211, 34, 253, 65, 44, 206, 27, 134, 144, 163, 111, 225 },
                            TrackingCorrelationId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Password = new byte[] { 86, 221, 239, 27, 80, 138, 102, 47, 104, 44, 91, 114, 238, 14, 230, 29, 53, 24, 143, 75, 188, 42, 169, 149, 97, 221, 34, 17, 179, 153, 176, 94, 196, 57, 94, 108, 143, 113, 214, 121, 88, 58, 18, 40, 53, 226, 202, 254, 45, 237, 8, 5, 86, 234, 66, 215, 211, 228, 116, 15, 45, 180, 104, 186 },
                            PasswordSalt = new byte[] { 71, 175, 219, 230, 136, 96, 241, 38, 62, 197, 8, 67, 196, 57, 161, 167, 45, 219, 13, 121, 180, 40, 234, 242, 3, 21, 47, 230, 20, 78, 68, 189, 73, 128, 81, 50, 214, 82, 232, 139, 165, 225, 54, 127, 212, 13, 195, 68, 82, 145, 93, 157, 173, 1, 25, 157, 57, 253, 233, 205, 90, 79, 93, 179, 190, 228, 185, 127, 174, 130, 68, 192, 247, 60, 65, 136, 32, 9, 249, 141, 55, 129, 63, 129, 83, 32, 30, 103, 196, 121, 39, 134, 253, 180, 108, 84, 114, 237, 145, 222, 62, 98, 222, 237, 239, 57, 137, 114, 156, 163, 144, 196, 11, 67, 221, 239, 179, 199, 82, 54, 155, 175, 111, 12, 219, 28, 159, 10 },
                            TrackingCorrelationId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UserName = "user"
                        });
                });

            modelBuilder.Entity("BankingPortal.Domain.Entities.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles", "user_management");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            RoleId = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("BankingPortal.Domain.Entities.Account", b =>
                {
                    b.HasOne("BankingPortal.Domain.Entities.Client", "Client")
                        .WithMany("Accounts")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("BankingPortal.Domain.Entities.Address", b =>
                {
                    b.HasOne("BankingPortal.Domain.Entities.Client", "Client")
                        .WithOne("Address")
                        .HasForeignKey("BankingPortal.Domain.Entities.Address", "ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("BankingPortal.Domain.Entities.UserRole", b =>
                {
                    b.HasOne("BankingPortal.Domain.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BankingPortal.Domain.Entities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BankingPortal.Domain.Entities.Client", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Address")
                        .IsRequired();
                });

            modelBuilder.Entity("BankingPortal.Domain.Entities.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("BankingPortal.Domain.Entities.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
